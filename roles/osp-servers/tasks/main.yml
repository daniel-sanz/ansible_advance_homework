---

# tasks file for osp.servers
- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: ospcloud
    name: "{{ item.name }}"
    state: "{{ item.state }}"    
    image: "{{ item.image }}"
    meta: "group={{ item.meta[0].group }},deployment_name={{ item.meta[0].deployment_name }}"
    flavor: "{{ item.flavor }}"
    security_groups: "{{ item.security_group }}"
    key_name: "{{ item.key_name }}"
    wait: yes
    nics:
    - net-name: int_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  loop:
    - "{{ osp_servers.frontend }}"
    - "{{ osp_servers.app1 }}"
    - "{{ osp_servers.app2 }}"
    - "{{ osp_servers.db }}"     
  async: 900
  poll: 0
  register: r_instances

- name: Wait for OSP instance creation to complete
  async_status: jid={{ item.ansible_job_id }}
  register: r_wait
  until: r_wait.finished
  retries: 900
  loop: "{{ r_instances.results }}"

#- name: Debug instances 
#  debug:
#    msg: "Server is {{ item.item.instance_name }}"
#  loop: "{{ r_instances.results }}"

- name: Add floating IP to Servers
  os_floating_ip:
    cloud: ospcloud
    state: present
    reuse: yes
    server: "{{ item.name }}"
    network: ext_network
    wait: true
    timeout: 180
  loop:
    - "{{ osp_servers.frontend }}"
    - "{{ osp_servers.app1 }}"
    - "{{ osp_servers.app2 }}"
    - "{{ osp_servers.db }}"  
  register: r_floating_ips

- name: debug task to output register  
  debug:
    msg: " instance ip register is {{ r_floating_ips.results }}"

- name: Show public IP
  debug: 
#    verbosity: 2
#    msg: "Floating IP is {{ item.item }}"
    msg: "Floating IP is {{ item.floating_ip.floating_ip_address }}"
  loop: "{{ r_floating_ips.results }}"

- name: Wait for server to be available
  wait_for:
    host: "{{ item.floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  loop: "{{ r_floating_ips.results }}"
  delegate_to: "{{ inventory_hostname }}"
